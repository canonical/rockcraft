name: rockcraft
base: core24
summary: A craft like experience to create rocks
description: |
  Rockcraft aims to take the same primitives used in Charmcraft and Snapcraft
  to create OCI images.
adopt-info: rockcraft
confinement: classic
license: GPL-3.0

# https://github.com/snapcore/snapcraft/issues/4187
environment:
  PATH: "$SNAP/libexec/rockcraft:/snap/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  LD_LIBRARY_PATH: "$SNAP/none"

platforms:
  amd64:
  arm64:
  # Disable armhf until the astral-uv snap is fixed (https://github.com/lengau/uv-snap/issues/4)
  # armhf:
  # riscv64 on core24 is not supported by the store at this moment.
  # riscv64:
  s390x:
  ppc64el:

apps:
  rockcraft:
    command: bin/python $SNAP/bin/rockcraft
    completer: completion.sh
  skopeo:
    command: bin/skopeo

build-packages:
  - libapt-pkg-dev
  - libffi-dev # for cffi (via pygit2)
  - libyaml-dev
  - python3.12-dev
  - pkg-config

parts:
  rockcraft-libs:
    after:
      - skopeo # to correctly patch gpg and gpgv
    plugin: nil
    build-attributes:
      - enable-patchelf
    stage-packages:
      - apt
      - apt-transport-https
      - apt-utils
      - binutils
      - gpg
      - gpgv
      - libpython3-stdlib
      - libpython3.12-stdlib
      - libpython3.12-minimal
      - python3-pip
      - python3-setuptools
      - python3-wheel
      - python3-venv
      - python3-minimal
      - python3-pkg-resources
      - python3.12-minimal
      - fuse-overlayfs
    organize:
      "usr/bin/fuse-overlayfs": "libexec/rockcraft/fuse-overlayfs"

  rockcraft-scripts:
    source: ./snap/local
    plugin: dump
    organize:
      craft.git: libexec/rockcraft/craft.git

  git:
    plugin: nil
    stage-packages: [git]
    build-attributes:
      - enable-patchelf
    prime:
      - "-usr/bin"
      - "-usr/share/doc"
      - "-usr/share/man"
      # perl is part of the core22 / core24
      - "-usr/share/perl"
      - "-usr/lib/x86_64-linux-gnu/perl"
      - "-usr/lib/x86_64-linux-gnu/libperl*"
      - "-usr/lib/x86_64-linux-gnu/libgdbm*"

  libgit2: # part came from snapcraft@5fbaab144842f
    source: https://github.com/libgit2/libgit2/archive/refs/tags/v1.7.1.tar.gz
    source-checksum: sha256/17d2b292f21be3892b704dddff29327b3564f96099a1c53b00edc23160c71327
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DBUILD_TESTS=OFF
    build-packages:
      - libssl-dev
    build-attributes:
      - enable-patchelf
    prime:
      - -usr/include

  rockcraft:
    source: .
    plugin: python
    python-requirements:
      # This will be generated by override-build
      - uv-requirements.txt
      # This has the source for python-apt for noble
      - requirements-noble.txt
    build-attributes:
      - enable-patchelf
    build-packages:
      - cargo
    build-snaps:
      - astral-uv
    build-environment:
      - "CFLAGS": "$(pkg-config python-3.12 yaml-0.1 --cflags)"
      - "PIP_NO_BINARY": ":all:"
      - UV_FROZEN: "true"
      - UV_PYTHON: /usr/bin/python3
      - MAKEOPTS: -j$(nproc --all)
    organize:
      bin/craftctl: libexec/rockcraft/craftctl
      # Extensions currently expect to find data files in share/rockcraft/
      "**/site-packages/extensions": share/rockcraft/extensions
    override-build: |
      uv export --no-dev --no-emit-workspace --no-emit-package pywin32 --output-file uv-requirements.txt
      ${SNAP}/libexec/snapcraft/craftctl default

      version="$("${CRAFT_STAGE}/usr/bin/python3" -c "import rockcraft;print(rockcraft.__version__)")"
      ${SNAP}/libexec/snapcraft/craftctl set version="$version"
      [ -n "$(echo $version | grep "post")" ] && grade=devel || grade=stable
      ${SNAP}/libexec/snapcraft/craftctl set grade="${grade}"

      sed -i -e '1 s|^#!/.*|#!/snap/rockcraft/current/bin/python -E|' $CRAFT_PART_INSTALL/bin/craftctl
    after:
      - rockcraft-libs
      - libgit2

  bash-completion:
    after: [rockcraft]
    plugin: nil
    build-environment:
      - PYTHONPATH: $CRAFT_STAGE/lib/python3.12/site-packages
    override-build: |
      python3 -m craft_cli.completion $CRAFT_PROJECT_NAME rockcraft.cli:get_app_info \
        > $CRAFT_PART_INSTALL/completion.sh

  umoci:
    plugin: make
    source: https://github.com/opencontainers/umoci.git
    source-tag: v0.4.7
    make-parameters:
      - umoci.static
    override-build: |
      make umoci.static
      mkdir "$CRAFT_PART_INSTALL"/bin
      install -m755 umoci.static "$CRAFT_PART_INSTALL"/bin/umoci
    build-packages:
      - make
    build-snaps:
      - go/1.21/stable

  skopeo:
    plugin: nil
    source: https://github.com/containers/skopeo.git
    source-tag: v1.14.2
    override-build: |
      CGO=1 go build -ldflags -linkmode=external ./cmd/skopeo
      mkdir "$CRAFT_PART_INSTALL"/bin
      install -m755 skopeo "$CRAFT_PART_INSTALL"/bin/skopeo
    stage-packages:
      - libgpgme11t64
      - libassuan0
      - libbtrfs0t64
      - libdevmapper1.02.1
    build-attributes:
      - enable-patchelf
    build-snaps:
      - go/1.21/stable
    build-packages:
      - libgpgme-dev
      - libassuan-dev
      - libbtrfs-dev
      - libdevmapper-dev
      - pkg-config

  chisel:
    plugin: nil
    stage-snaps:
      - chisel/latest/candidate
    organize:
      bin/chisel: libexec/rockcraft/chisel
    stage:
      - libexec/rockcraft/chisel
