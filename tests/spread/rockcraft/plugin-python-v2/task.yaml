summary: Python plugin v2 tests

environment:
  # python3 comes from a stage-package deb
  SCENARIO/python_in_install_ubuntu: "python-in-install-ubuntu"
  SCENARIO/python_in_install_bare: "python-in-install-bare"
  # python3 comes from the stage dir
  SCENARIO/python_in_stage_ubuntu: "python-in-stage-ubuntu"
  SCENARIO/python_in_stage_bare: "python-in-stage-bare"
  # python3 comes from chisel slices
  SCENARIO/python_from_chisel_ubuntu: "python-from-chisel-ubuntu"
  SCENARIO/python_from_chisel_bare: "python-from-chisel-bare"

prepare: cp -r src/ "$SCENARIO"/

execute: |
  cd "$SCENARIO"

  # Build the rock & load it into docker
  run_rockcraft pack
  ROCK_FILE="${SCENARIO}_0.1_amd64.rock"
  IMAGE="${SCENARIO}:0.1"
  sudo rockcraft.skopeo --insecure-policy copy oci-archive:${ROCK_FILE} docker-daemon:${IMAGE}
  docker images
  rm ${ROCK_FILE}

  # Run the packaged project, both via the console script and via "python -m"
  EXPECTED_HELLO="python plugin v2 is working"
  docker run --rm $IMAGE exec hello | MATCH "$EXPECTED_HELLO"
  docker run --rm $IMAGE exec /bin/python3 -m hello | MATCH "$EXPECTED_HELLO"
  docker run --rm $IMAGE exec /usr/bin/python3 -m hello | MATCH "$EXPECTED_HELLO"
  docker run --rm $IMAGE exec python3 -m hello | MATCH "$EXPECTED_HELLO"

  # Run the extra Python package, installed as a python-package
  EXPECTED_BLACK="The uncompromising code formatter"
  docker run --rm $IMAGE exec black -h | MATCH "$EXPECTED_BLACK"
  docker run --rm $IMAGE exec /bin/python3 -m black -h | MATCH "$EXPECTED_BLACK"
  docker run --rm $IMAGE exec /usr/bin/python3 -m black -h | MATCH "$EXPECTED_BLACK"
  docker run --rm $IMAGE exec python3 -m black -h | MATCH "$EXPECTED_BLACK"

  # Run the extra Python package, installed as a python-requirement
  EXPECTED_FLASK="A general utility script for Flask applications"
  docker run --rm $IMAGE exec flask --help | MATCH "$EXPECTED_FLASK"
  docker run --rm $IMAGE exec /bin/python3 -m flask --help | MATCH "$EXPECTED_FLASK"
  docker run --rm $IMAGE exec /usr/bin/python3 -m flask --help | MATCH "$EXPECTED_FLASK"
  docker run --rm $IMAGE exec python3 -m flask --help | MATCH "$EXPECTED_FLASK"
